[gd_resource type="VisualShader" load_steps=10 format=2]

[sub_resource type="VisualShaderNodeScalarUniform" id=9]
uniform_name = "Velocidade"
default_value_enabled = true
default_value = 0.05

[sub_resource type="VisualShaderNodeTextureUniform" id=1]
uniform_name = "Texture"

[sub_resource type="VisualShaderNodeVectorCompose" id=2]

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=4]

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 0.0, 1, 5.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 0.05 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=8]

[resource]
code = "shader_type spatial;
render_mode cull_disabled, diffuse_toon, specular_disabled, async_visible, unshaded, shadows_disabled;

uniform float Velocidade = 0.05;
uniform sampler2D Texture;



void vertex() {
// Output:0

}

void fragment() {
// Input:7
	float n_out7p0 = TIME;

// ScalarUniform:10
	float n_out10p0 = Velocidade;

// ScalarOp:8
	float n_out8p0 = n_out7p0 * n_out10p0;

// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// VectorDecompose:5
	float n_out5p0 = n_out4p0.x;
	float n_out5p1 = n_out4p0.y;
	float n_out5p2 = n_out4p0.z;

// ScalarOp:9
	float n_out9p0 = n_out8p0 + n_out5p0;

// ScalarOp:6
	float n_in6p1 = 5.00000;
	float n_out6p0 = n_out9p0 * n_in6p1;

// VectorCompose:3
	float n_in3p2 = 0.00000;
	vec3 n_out3p0 = vec3(n_out6p0, n_out5p1, n_in3p2);

// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(Texture, n_out3p0.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -441, 160 )
modes/cull = 2
modes/diffuse = 4
modes/specular = 4
flags/shadows_disabled = true
flags/unshaded = true
nodes/fragment/0/position = Vector2( 140, 140 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -280, 220 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -600, 340 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -1380, 420 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( -1180, 360 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( -760, 220 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( -1560, 100 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( -1280, 120 )
nodes/fragment/9/node = SubResource( 8 )
nodes/fragment/9/position = Vector2( -960, 180 )
nodes/fragment/10/node = SubResource( 9 )
nodes/fragment/10/position = Vector2( -1820, 240 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 3, 0, 2, 0, 4, 0, 5, 0, 6, 0, 3, 0, 5, 1, 3, 1, 7, 0, 8, 0, 8, 0, 9, 0, 5, 0, 9, 1, 9, 0, 6, 0, 10, 0, 8, 1, 2, 1, 0, 1 )
